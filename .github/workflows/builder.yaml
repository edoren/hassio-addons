name: Builder

env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.yaml Dockerfile icon.png logo.png docker-entrypoint.sh"

on:
  workflow_dispatch:
    inputs:
      addon:
        description: 'The name of the addon to build'
        type: string
        required: true
  push:
    branches:
      - master
    tags:
      - "v*.*.*-*"
  pull_request:
    branches:
      - master

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.2

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v45

      - name: Find add-on directories
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        if : ${{ steps.changed_files.outputs.any_changed == 'true' }}
        id: changed_addons
        run: |
          all_addons=(${{ steps.addons.outputs.addons }})

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ " ${all_addons[@]} " =~ [[:space:]]${{ inputs.addon }}[[:space:]] ]]; then
              changed=("\"${{ inputs.addon }}\"");
            fi
          elif [[ "${{ github.event.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-.+$ ]]; then
            addon=$(echo "${{ github.event.ref }}" | sed "s|.*-||");
            if [[ " ${all_addons[@]} " =~ [[:space:]]${addon}[[:space:]] ]]; then
              changed=("\"$addon\"");
            fi
          else
            declare -a changed_addons;
            for addon in ${{ steps.addons.outputs.addons }}; do
              for monitored_file in ${{ env.MONITORED_FILES }}; do
                for changed_file in ${{ steps.changed_files.outputs.all_changed_files }}; do
                  if [[ "$changed_file" =~ ^$addon/$monitored_file$ ]]; then
                    if [[ ! "${changed_addons[@]}" =~ "$addon" ]]; then
                      changed_addons+=("\"${addon}\",");
                    fi
                  fi
                done
              done
            done
            changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev);
          fi

          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT;
            echo "addons=[$changed]" >> $GITHUB_OUTPUT;
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
          fi

  build:
    needs: init
    if: needs.init.outputs.changed == 'true'

    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]
        include:
          - os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check add-on version & tag version
        run: |
          if [[ "${{ github.event.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-${{ matrix.addon }}$ ]]; then
            tag_version=$(echo "${{ github.event.ref }}" | sed -E 's|refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)-.*|\1|');
            if [[ "${{ steps.info.outputs.version }}" != "$tag_version" ]]; then
              echo "Tag version mismatches config.yaml version";
              exit 1;
            fi
          fi

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.image }}" == "null" ]]; then
            echo "Image property is not defined, skipping build"
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          elif [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
            echo "build_arch=true" >> $GITHUB_OUTPUT;
            echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
          else
            echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

      - name: Check if build has to be published
        run: |
          tag_regex="^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-${{ matrix.addon }}$"
          if [[ "${{ github.event.ref }}" =~ $tag_regex ]]; then
            echo "BUILD_ARGS=" >> $GITHUB_ENV;
            echo "Build is going to be published";
          else
            echo "Build is going to be tested only";
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2024.08.2
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "${{ github.repository_owner }}" \
            --addon
